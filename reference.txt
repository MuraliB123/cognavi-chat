using Microsoft.Playwright;
using NUnit.Framework;
using System.Threading.Tasks;

namespace PlaywrightTests
{
    public class CleanLoginTests
    {
        private IBrowser _browser;
        private IBrowserContext _context;
        private IPage _page;

        [SetUp]
        public async Task Setup()
        {
            var playwright = await Playwright.CreateAsync();
            _browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions
            {
                Headless = false, // optional: show browser for debugging
                Args = new[] { "--incognito" } // optional: force incognito mode
            });

            // ✅ Fresh browser context — no cached logins
            _context = await _browser.NewContextAsync(new BrowserNewContextOptions
            {
                IgnoreHTTPSErrors = true, // helps with internal enterprise certs
                StorageStatePath = null   // ensures nothing cached is loaded
            });

            _page = await _context.NewPageAsync();
        }

        [Test]
        public async Task LoginWithServiceAccount()
        {
            await _page.GotoAsync("https://your.sharepoint.com/path-to-login");

            // Fill in service account credentials
            await _page.FillAsync("#i0116", "service.account@yourdomain.com");
            await _page.ClickAsync("#idSIButton9");

            await _page.FillAsync("#i0118", "yourServiceAccountPassword");
            await _page.ClickAsync("#idSIButton9");

            // Handle "Stay signed in?" prompt if it appears
            var staySignedIn = await _page.Locator("#idBtn_Back").IsVisibleAsync();
            if (staySignedIn)
            {
                await _page.ClickAsync("#idBtn_Back"); // Click "No"
            }

            // You're now logged in as the service account!
            // Proceed to file download, etc.
        }

        [TearDown]
        public async Task Teardown()
        {
            await _context.CloseAsync();
            await _browser.CloseAsync();
        }
    }
}
