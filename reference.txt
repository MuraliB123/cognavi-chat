using System;
using System.Data.SqlClient;
using System.IO;
using System.Threading.Tasks;
using Microsoft.Playwright;
using NUnit.Framework;

namespace PlaywrightTests
{
    public class DownloadAndUploadTests
    {
        private IBrowser _browser;
        private IBrowserContext _context;
        private IPage _page;

        [OneTimeSetUp]
        public async Task Setup()
        {
            var playwright = await Playwright.CreateAsync();
            _browser = await playwright.Chromium.LaunchAsync(new() { Headless = true });
            _context = await _browser.NewContextAsync(new() { AcceptDownloads = true });
            _page = await _context.NewPageAsync();
        }

        [OneTimeTearDown]
        public async Task TearDown()
        {
            await _browser.CloseAsync();
        }

        [Test]
        public async Task DownloadFile_And_SaveToDatabase()
        {
            await _page.GotoAsync("https://file-examples.com/index.php/sample-documents-download/sample-pdf-download/");

            // Download file
            var download = await _page.RunAndWaitForDownloadAsync(async () =>
            {
                await _page.ClickAsync("text=Download sample pdf file");
            });

            string savePath = Path.Combine(Path.GetTempPath(), download.SuggestedFilename);
            await download.SaveAsAsync(savePath);

            // Upload to SQL DB
            byte[] fileBytes = File.ReadAllBytes(savePath);
            string connectionString = "Server=localhost;Database=MyDb;User Id=myuser;Password=mypassword;";

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();
                using (SqlCommand cmd = new SqlCommand("INSERT INTO DownloadedFiles (FileName, FileContent) VALUES (@name, @content)", conn))
                {
                    cmd.Parameters.AddWithValue("@name", download.SuggestedFilename);
                    cmd.Parameters.AddWithValue("@content", fileBytes);

                    int rows = cmd.ExecuteNonQuery();
                    Assert.AreEqual(1, rows, "One row should be inserted.");
                }
            }

            Console.WriteLine("File saved to DB: " + download.SuggestedFilename);
        }
    }
}
